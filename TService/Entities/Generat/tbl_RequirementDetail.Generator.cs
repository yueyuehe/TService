#region AgileEAS.NET-generated
//------------------------------------------------------------------------------
//     AgileEAS.NET应用开发平台，是基于敏捷并行开发思想以及.NET构件技术而开发的一个应用系统快速开发平台，用于帮助中小软件企业
//建立一条适合快速变化的开发团队，以达到节省开发成本、缩短开发时间，快速适应市场变化的目的。
//     AgileEAS.NET应用开发平台包含基础类库、资源管理平台、运行容器、开发辅助工具等四大部分，资源管理平台为敏捷并行开发提供了
//设计、实现、测试等开发过程的并行，应用系统的各个业务功能子系统，在系统体系结构设计的过程中被设计成各个原子功能模块，各个子
//功能模块按照业务功能组织成单独的程序集文件，各子系统开发完成后，由AgileEAS.NET资源管理平台进行统一的集成部署。
//
//     AgileEAS.NET SOA 中间件平台是一套免费的快速开发工具，可以不受限制的用于各种非商业开发之中，商业应用请向作者获取商业授权，
//商业授权也是免费的，但是对于非授权的商业应用视为侵权，开发人员可以参考官方网站和博客园等专业网站获取公开的技术资料，也可以向
//AgileEAS.NET官方团队请求技术支持。
//
// 官方网站：http://www.smarteas.net
// 团队网站：http://www.agilelab.cn
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由AgileEAS.NET数据模型设计工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
#endregion

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.ComponentModel;
using System.Data;
using EAS.Data;
using EAS.Data.Access;
using EAS.Data.ORM;
using EAS.Data.Linq;

namespace TService.Entities
{
   /// <summary>
   /// 实体对象 tbl_RequirementDetail(需求明细)。
   /// </summary>
   [Serializable()]
   [Table("tbl_RequirementDetail","需求明细")]
   partial class tbl_RequirementDetail: DataEntity<tbl_RequirementDetail>, IDataEntity<tbl_RequirementDetail>
   {
       public tbl_RequirementDetail()
       {
       }
       
       protected tbl_RequirementDetail(SerializationInfo info, StreamingContext context)
           : base(info, context)
       {
       }
       
       #region O/R映射成员

       /// <summary>
       /// GUID 。
       /// </summary>
       [Column("GUID","GUID"),DataSize(128),PrimaryKey,NotNull]
       [DisplayName("GUID")]
       public string GUID
       {
           get;
           set;
       }

       /// <summary>
       /// 标题 。
       /// </summary>
       [Column("Title","标题"),DataSize(128)]
       [DisplayName("标题")]
       public string Title
       {
           get;
           set;
       }

       /// <summary>
       /// 内容 。
       /// </summary>
       [Column("Content","内容"),DataSize(2000)]
       [DisplayName("内容")]
       public string Content
       {
           get;
           set;
       }

       /// <summary>
       /// 状态 。
       /// </summary>
       [Column("Status","状态")]
       [DisplayName("状态")]
       public int Status
       {
           get;
           set;
       }

       /// <summary>
       /// 提交时间 。
       /// </summary>
       [Column("CommitDate","提交时间")]
       [DisplayName("提交时间")]
       public DateTime CommitDate
       {
           get;
           set;
       }

       /// <summary>
       /// 创建日期 。
       /// </summary>
       [Column("CreateDate","创建日期")]
       [DisplayName("创建日期")]
       public DateTime CreateDate
       {
           get;
           set;
       }

       /// <summary>
       /// 反馈日期 。
       /// </summary>
       [Column("FeedBackDate","反馈日期")]
       [DisplayName("反馈日期")]
       public DateTime FeedBackDate
       {
           get;
           set;
       }

       /// <summary>
       /// 备注 。
       /// </summary>
       [Column("Remark","备注"),DataSize(128)]
       [DisplayName("备注")]
       public string Remark
       {
           get;
           set;
       }

       /// <summary>
       /// 创建人 。
       /// </summary>
       [Column("UserID","创建人"),DataSize(128)]
       [DisplayName("创建人")]
       public string UserID
       {
           get;
           set;
       }

       /// <summary>
       /// 需求项目ID 。
       /// </summary>
       [Column("RequirementID","需求项目ID"),DataSize(128)]
       [DisplayName("需求项目ID")]
       public string RequirementID
       {
           get;
           set;
       }
       
       #endregion
       
       #region O/R虚拟属性
       
       #endregion
       
       #region 关联枚举
       
       #endregion
       
       #region O/R引用实体

       private tbl_User m_Users;

       /// <summary>
       /// Users 。
       /// </summary>
       [RefEntity("UserID", "Users", typeof(tbl_User), "GUID", true, false)]
       public tbl_User Users
       {
           get
           {
               if ((this.m_Users == null && !string.IsNullOrEmpty(this.UserID)) || (this.m_Users!=null && this.m_Users.GUID != this.UserID))
               {
                   this.m_Users = DataEntity<tbl_User>.Lazy(this.UserID);
               }

               return this.m_Users;
           }
           set
           {
               this.m_Users = value;
           }
       }

       private tbl_RequirementDetail m_Requirement;

       /// <summary>
       /// 需求项目 。
       /// </summary>
       [RefEntity("RequirementID", "需求项目", typeof(tbl_RequirementDetail), "GUID", false, false)]
       public tbl_RequirementDetail Requirement
       {
           get
           {
               if ((this.m_Requirement == null && !string.IsNullOrEmpty(this.RequirementID)) || (this.m_Requirement!=null && this.m_Requirement.GUID != this.RequirementID))
               {
                   this.m_Requirement = DataEntity<tbl_RequirementDetail>.Lazy(this.RequirementID);
               }

               return this.m_Requirement;
           }
           set
           {
               this.m_Requirement = value;
           }
       }
       
       #endregion
       
       #region O/R子实体
       
       #endregion
   }
}
